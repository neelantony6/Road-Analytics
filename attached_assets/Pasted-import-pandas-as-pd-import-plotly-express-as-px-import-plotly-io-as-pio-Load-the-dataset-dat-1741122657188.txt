import pandas as pd
import plotly.express as px
import plotly.io as pio

# Load the dataset
dataset = pd.read_csv(r'C:\Users\neela\Downloads\RA2019_A2_cleaned (1).csv')

# --- GRAPH 1: Road Accident Trends Over Time ---
# Prepare data for trends
data_trends = dataset.set_index('states/uts')[
    ['total_road_accidents_2016', 'total_road_accidents_2017',
     'total_road_accidents_2018', 'total_road_accidents_2019']
]
data_trends.columns = ['2016', '2017', '2018', '2019']

# Reshape for Plotly
interactive_data = data_trends.reset_index().melt(
    id_vars='states/uts', var_name='Year', value_name='Accidents'
)

# Create interactive line graph
fig1 = px.line(
    interactive_data,
    x='Year',
    y='Accidents',
    color='states/uts',
    title="Road Accident Trends Across Indian States (2016â€“2019)",
    labels={'states/uts': 'States/UTs', 'Accidents': 'Total Road Accidents'},
    template="plotly"
)

# Show the graph
fig1.show()

# Save figure as interactive HTML
pio.write_html(fig1, "road_accident_trends.html")

# --- GRAPH 2: Top States/UTs with Most Accidents for Each Year (2016-2019) ---
# Define the years for which we need bar charts
years = ["2016", "2017", "2018", "2019"]
column_mapping = {
    "2016": "total_road_accidents_2016",
    "2017": "total_road_accidents_2017",
    "2018": "total_road_accidents_2018",
    "2019": "total_road_accidents_2019"
}

# Generate and save bar charts for each year
for year in years:
    # Sort dataset by accident count for the year
    sorted_data = dataset[['states/uts', column_mapping[year]]].sort_values(
        by=column_mapping[year], ascending=False
    )

    # Create bar chart
    fig = px.bar(
        sorted_data,
        x='states/uts',
        y=column_mapping[year],
        title=f"Top States/UTs with Most Road Accidents in {year}",
        labels={'states/uts': 'States/UTs', column_mapping[year]: f'Road Accidents ({year})'},
        template="plotly",
        text=column_mapping[year]
    )
    fig.update_traces(textposition='outside')

    # Show the graph
    fig.show()
    
    # Save figure as interactive HTML
    pio.write_html(fig, f"top_states_accidents_{year}.html")

